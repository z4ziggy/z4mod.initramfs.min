#!/z4mod/bin/sh
#
# z4mod init wrapper, (C) Elia Yehuda, 2010-2011, GPLv2
#
# your standard linux init script - create device nodes, mount partitions
# and execute /sbin/init
export PATH=/z4mod/bin:/sbin:/system/xbin:/system/bin:$PATH

# are we running post-init mode?
if [ $$ != 1 ]; then
	# execute system-startup scripts
	for file in `ls /etc/init.d/S*`; do /system/bin/sh "$file"; done
	exit 0
fi
exec >> /z4mod/log/init 2>&1

# we must have proc mounted
mount -t proc none /proc
mount -t sysfs none /sys
# insmod all modules in the correct order
for mod in `grep -o 'insmod .*' /init.rc | cut -f 2 -d " "`; do
	insmod $mod && rm $mod
done
for mod in ext2 jbd2 ext4 jbd ext3 jfs; do
	[ -f /lib/modules/$mod.ko ] && insmod /lib/modules/$mod.ko && rm /lib/modules/$mod.ko
done

# create all block device nodes
mknod /dev/null c 1 3
for dev in `ls -A1d /sys/block/*/dev /sys/block/*/*/dev 2>/dev/null`; do
	devname=`echo $dev | cut -f 5 -d"/"`
	[ "$devname" == "dev" ] && devname=`echo $dev | cut -f 4 -d"/"`
	devparams=`sed 's/:/ /' $dev`
	mknod /dev/block/$devname b $devparams
done
set -x

# mount /system
system=`grep -o "mount rfs .* /system" /init.rc | cut -f 3 -d" "`
magic="`dd if=$system bs=82 skip=1 count=1 2>/dev/null | dd bs=4 count=1 2>/dev/null`"
if [ "$magic" == "FAT3" ]; then
	# mount as RFS (nosuid,nodev ??)
	mount -r -t rfs $system /system -o check=no
else
	# auto detect filesystem
	mount -r $system /system -o errors=continue,noatime,nodiratime
fi
ln -s /system/etc/ /etc
ln -s /proc/mounts /etc/mtab

# execute pre-init scripts
for file in `ls /etc/init.d/P*`; do /system/bin/sh "$file"; done

# mount all filesystems in fstab (with verbose information for the log)
mount -va
mount
# loop over mounted partitions and disable them in rc scripts
for part in `grep "/dev/block/.*" /proc/mounts | cut -d" " -f 1`; do
	sed -i 's|mount rfs '"${part}"'.*|#\0|g' /*.rc
done
[ "`grep /data /proc/mounts`" != "" ] && sed -i 's/mmcblk0/z4cblk0/g' /sbin/init

# execute 2nd wrappers scripts (for root, user-specific script, etc)
for file in `ls /z4*.sh`; do /system/bin/sh "$file"; done

# execute early-init scripts
for file in `ls /etc/init.d/E*`; do /system/bin/sh "$file"; done

exec /sbin/init
